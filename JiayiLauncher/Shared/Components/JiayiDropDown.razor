<div class="dropdown">
    @if (Multiselect)
    {
        @if (SelectedItems.Length == 0)
        {
            <span class="selected" style="color: var(--text-grayed)">@Name</span>
        }
        else
        {
            <span class="selected">
                @string.Join(", " , SelectedItems)
            </span>
        }
    }
    else
    {
        if (string.IsNullOrEmpty(SelectedItem))
        {
            <span class="selected" style="color: var(--text-grayed)">@Name</span>
        }
        else
        {
            <span class="selected">@SelectedItem</span>
        }
    }
    <span class="material-symbols-sharp">expand_more</span>
    
    <span class="dropdown-click" onclick="@ToggleDropdown"></span>
    
    <ul class="dropdown-items" data-shown="@_showDropdown">
        @foreach (var item in Items)
        {
            @if (Multiselect)
            {
                <li class="hack">
                    <label>
                        <input type="checkbox" value="@item" @onclick="() => OnToggleMultiSelect(item)">
                        @item
                    </label>
                </li>
            }
            else
            {
                <li class="also-hack">
                    <label>
                        <input type="radio" name="selectedItem" value="@item" class="dropdown-item" @onchange="OnSelectSingle">
                        @item
                    </label>
                </li>
            }
        }
    </ul>
</div>
    

@code {
    [Parameter]
    public string Name { get; set; }
    
    [Parameter]
    public List<string> Items { get; set; }
    
    [Parameter]
    public bool Multiselect { get; set; }
    
    public string?[] SelectedItems { get; set; } = Array.Empty<string>();
    
    // if not multiselect
    public string? SelectedItem { get; set; } = "";
    
    private string _showDropdown = "false";
    private string _icon = "expand_more";
    
    private void ToggleDropdown()
    {
        _showDropdown = _showDropdown == "false" ? "true" : "false";
        _icon = _icon == "expand_more" ? "expand_less" : "expand_more";
    }
    
    private void OnToggleMultiSelect(string item)
    {
        SelectedItems = SelectedItems.Contains(item) ?
            SelectedItems.Where(x => x != item).ToArray() :
            SelectedItems.Append(item).ToArray();
        
        StateHasChanged();
    }
    
    private void OnSelectSingle(ChangeEventArgs e)
    {
        SelectedItem = e.Value.ToString();
        StateHasChanged();
    }
}