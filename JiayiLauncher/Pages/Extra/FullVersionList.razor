@page "/Versions/Full/{version?}"
@using JiayiLauncher.Features.Versions
@using Microsoft.JSInterop

@* javascript :( *@
@inject IJSRuntime JavaScript

@inject NavigationManager NavigationManager

<div class="page-title" style="display: @_showTitle">
    <h4 @onclick="BackClicked">Version Manager</h4>
    <span class="material-symbols-sharp">arrow_right</span>
    <h3>Full version list</h3>
</div>

<div class="find-tools">
    <span class="material-symbols-sharp">search</span>
    <JiayiTextBox Placeholder="Search versions" @ref="_searchBox" Changed="StateHasChanged" />

    <p class="invisible-normalizer">invisible</p>
</div>

<div class="version-list-page">
    @if (_versionList != null)
    {
        var versions = _versionList.Where(
            v => v.Key.Contains(_searchBox?.Value ?? "", StringComparison.OrdinalIgnoreCase)).ToList();
        
        if (versions.Count == 0)
        {
            <i class="no-versions">No versions found</i>
        }
        else
        {
            <ul class="versions">
                @for (var i = 0; i < Math.Min(_amountToDisplay, versions.Count); i++)
                {
                    var name = versions[i].Key;
                    var id = name.Replace(".", "");
                    var version = versions[i].Value;
                    
                    <li class="version" id="@id">
                        <strong>@name</strong>
                    </li>
                }
            </ul>
            
            @if (versions.Count > _amountToDisplay)
            {
                <div class="load-more" @onclick="() => _amountToDisplay += 10">
                    <a>Load more</a>
                    <span class="material-symbols-sharp">expand_more</span>
                </div>
            }
        }
    }
</div>

@code {
    [Parameter]
    public string? Version { get; set; }
    
    [Parameter]
    public bool ShowTitle { get; set; } = true;

    private Dictionary<string, MinecraftVersion>? _versionList;
    private int _amountToDisplay = 10;
    
    private JiayiTextBox? _searchBox;

    private string _showTitle => ShowTitle ? "flex" : "none";

    protected override async Task OnInitializedAsync()
    {
        _versionList = await VersionList.GetFullVersionList();
    }

    protected override async Task OnParametersSetAsync()
    {
        Version ??= "None";
        if (Version == "None") return;
        
        var index = _versionList?.Keys.ToList().IndexOf(Version);
        _amountToDisplay = index is > 0 ? index.Value + 5 : 10;
    
        var id = Version.Replace(".", "");
        var element = await JavaScript.InvokeAsync<IJSObjectReference>("document.getElementById", id);
        await element.InvokeVoidAsync("scrollIntoView", new { behavior = "smooth" });
    }

    private void BackClicked()
    {
        NavigationManager.NavigateTo("/Versions");
    }

}