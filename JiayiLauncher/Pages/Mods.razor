@using JiayiLauncher.Shared.Components.Mods
@using System.Diagnostics
@using System.Timers
@using JiayiLauncher.Features.Mods
@using JiayiLauncher.Settings
@using JiayiLauncher.Utils

@page "/Mods"

<h3>Mods</h3>

<div class="find-tools">
    <JiayiTextBox Placeholder="Search mods"></JiayiTextBox>
    
    <div class="separator"></div>

    <JiayiFilter Checked="true">All</JiayiFilter>
    <JiayiFilter>Locally stored</JiayiFilter>
    <JiayiFilter>Online</JiayiFilter>
</div>

<div class="mods"> 
    <ul class="mod-list">
        @* mods here *@
    </ul>
    <p class="add-new" @ondragenter="OnDragEnter" @ondragleave="OnDragLeave" @ondragover="OnDragEnter" data-hovered="@_hovered">
        @if (JiayiSettings.Instance!.ModCollectionPath != string.Empty)
        {
            <label class="drag-area">
                Drag mods, folders, or URLs here<br>
                or click the plus icon to add mods
                <InputFile OnChange="FileDropped" multiple @onclick:preventDefault />
            </label>
        }
        else
        {
            <label class="drag-area">
                You don't have a mods folder set up.<br><br>
                Drag a folder here to make it work with Jiayi,<br>
                or add mods to create a new folder.
                <InputFile OnChange="FileDropped" multiple @onclick:preventDefault />
            </label>
        }
    </p>
</div>

<button class="add-button" @onclick="@ShowAddMods">
    <span class="material-symbols-sharp">add</span>
</button>

@code {
    [CascadingParameter]
    public IModalService Modal { get; set; } = default!;

    private string _hovered = "no";
    private string _hoveringFile = string.Empty;

    private Timer? _dragTimer;

    private async Task ShowAddMods()
    {
        var modal = Modal.Show<NewMod>("Add new mod");
        var result = await modal.Result;
    }

    private void OnDragEnter(DragEventArgs obj)
    {
        var transfer = obj.DataTransfer;
        if (transfer.Types.Length <= 0) return;
        if (transfer.Types.Contains("Files") || transfer.Types.Contains("text/uri-list"))
        {
            _hovered = "yes";
            //_dragTimer?.Stop();
        }
    }

    private void OnDragLeave(DragEventArgs obj)
    {
        //_dragTimer = Timeout.Set(() => { _hovered = "no"; }, 25);
        _hovered = "no";
    }

    private void FileDropped(InputFileChangeEventArgs obj)
    {
        _hovered = "no";
        
        foreach (var file in obj.GetMultipleFiles())
        {
            Debug.WriteLine(file.Name);
            
            
        }
    }
}