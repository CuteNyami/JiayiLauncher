@page "/"
@page "/Dashboard"

@using JiayiLauncher.Modals

<h3>Good @DetermineTimeOfDay()</h3>

<p>
    This page will display important information, like your current Minecraft version.<br><br>
    It will also show you your recently launched mods, and the Profile you have selected.
</p>

@* test *@

<h3>Components</h3>
<h4>Drop down buttons</h4>
<div style="width: 100%; display: flex; gap: 1rem;">
    <JiayiDropDown Name="Single option dropdown" Items="@_radioItems" />
    <JiayiDropDown Name="Multiple option dropdown" Items="@_checkboxItems" Multiselect="true" />
    <JiayiDropDown Name="A lot of items" Items="@_aLotOfItems" Multiselect="true" />
</div>

<h4>Buttons</h4>

<div style="width: 100%; display: flex; gap: 1rem; place-items: center;">
    <JiayiButton OnClick="ButtonClicked">Show a message box</JiayiButton>
    <JiayiButton Size="14px">Small button (does nothing)</JiayiButton>
</div>

<h4>Text boxes</h4>

<JiayiTextBox Placeholder="Put some words here..." />

@code {
    [CascadingParameter]
    public IModalService ModalService { get; set; } = default!;
    
    private List<string> _radioItems = new() { "Radio button", "Choose one only", "Third option" };
    private List<string> _checkboxItems = new() { "Checkbox", "Choose multiple", "Also a third option" };
    private List<string> _aLotOfItems = new() { "Bunch of items", "Testing truncating selected items", "Third option", "Fourth option", "Fifth option", "Sixth option", "Seventh option", "Eighth option", "Ninth option", "Tenth option", "Eleventh option", "Twelfth option", "Thirteenth option", "Fourteenth option", "Fifteenth option", "Sixteenth option", "Seventeenth option", "Eighteenth option", "Nineteenth option", "Twentieth option" };
    
    private string DetermineTimeOfDay()
    {
        var hour = DateTime.Now.Hour;
        if (hour is >= 5 and < 12)
        {
            return "morning";
        }
        return hour is >= 12 and < 17 ? "afternoon" : "evening";
    }
    
    private void ButtonClicked()
    {
        var options = new List<(string, EventCallback)>
        {
            ("Yes", EventCallback.Empty),
            ("No", EventCallback.Empty),
            ("Maybe", EventCallback.Empty)
        };

        var parameters = new ModalParameters()
            .Add(nameof(MessageBox.Buttons), options)
            .Add(nameof(MessageBox.Message), "This is a test message box.");
        
        ModalService.Show<MessageBox>("Test message box", parameters);
    }
}